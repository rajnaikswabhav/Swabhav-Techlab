<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Target" xml:space="preserve">
    <value>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</value>
  </data>
  <data name="DefaultSchema" xml:space="preserve">
    <value>gsmktg</value>
  </data>
</root>